[
    {
        "id": "t001",
        "text": "Создать массив с числами от 1 да 100 в перемешенном порядке"
    },
    {
        "id": "t002",
        "text": "Изменить в строке все первые буквы в слове на заглавные"
    },
    {
        "id": "t003",
        "text": "функция вида f(1)(3)(6) долна сумироват числа"
    },
    {
        "id": "t004",
        "text": "Развернуть вложенный n количество раз массив с помощью рекурсии"
    },
    {
        "id": "t005",
        "text": "Создать свой фильтр"
    },
    {
        "id": "t006",
        "text": "Создать свой редюс"
    },
    {
        "id": "t007",
        "text": "Создать свой find"
    },
    {
        "id": "t008",
        "text": "Создать свой some и every"
    },
    {
        "id": "t009",
        "text": "Создать свой slice и splice"
    },
    {
        "id": "t010",
        "text": "Создать свой entries"
    },
    {
        "id": "t011",
        "text": "Создать свой bing"
    },
    {
        "id": "t012",
        "text": "Создать свой join"
    },
    {
        "id": "t013",
        "text": "Создать свой reverce"
    },
    {
        "id": "t014",
        "text": "Создать свой assing"
    },
    {
        "id": "t015",
        "text": "Создать свой push, shift, pop, unshift"
    },
    {
        "id": "t016",
        "text": "Создать свою асинхронную функцию которая запускает калбэк после асинхронной операции (settimeout)"
    },
    {
        "id": "t017",
        "text": "Сделать класс на подобии Promise который в качестве параметров принимает калбэк и у этого кадбэка в качестве параметров две функции resolve и reject "
    },
    {
        "id": "t018",
        "text": "Сделать функцию  memo которая сохраняет результат и в случае если параметр уже исользовался достать его из памяти в противном случае вычеслить"
    },
    {
        "id": "t019",
        "text": "Создать функцию котора считает сколько указанных символов в строке"
    },
    {
        "id": "t020",
        "text": "Напишите однострочное решение, которое вычисляет сумму квадратных корней для всех чётных чисел целочисленного массива."
    },
    {
        "id": "t021",
        "text": "Напишите функцию, которая пишет в консоль число в заданном диапазоне, в случае, если оно успешно делится или не делится с остатком или без остатка в зависимости от параметров."
    },
    {
        "id": "t022",
        "text": "Есть ферма животных, у всех животных есть имена и возраст. Животные бывают разных типов: Кошки, Собаки, Коровы. У каждого животного могут быть дети.Если животное является родителем этих детей, в свою очередь глубина семейного древа может достигать N либо 0.Опишите структуры данных для фермы животных и напишите функцию, которая делает подсчёт всех возрастов животных и выводит общий возраст для всей фермы."
    },
    {
        "id": "t023",
        "text": "Cортировка без sort в одну строку"
    },
    {
        "id": "t024",
        "text": "Rак посчитать общую сумму сложного массива обьектов исполтзуя flatMap "
    },
    {
        "id": "t025",
        "text": "Делаем клон массива в рамдомном порядке (не мутируя исходной массив)"
    },
    {
        "id": "t026",
        "text": "Так называют слово, которое содержит все буквы другого слова в том же количестве, но ином порядке. Функция проверки двух слов"
    },
    {
        "id": "t027",
        "text": "Стоит напомнить, что последовательность Фибоначчи — это ряд чисел, где каждое последующее является суммой двух предыдущих. Так, первые десять чисел выглядят следующим образом: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34."
    },
    {
        "id": "t028",
        "text": " Функция принимет обьекты и собирает их в один, если ключ повтряется то она ривращает значение в массив со всеми вариантами"
    },
    {
        "id": "t029",
        "text": " Поиск элемента в многомерном массиве (рекурсия и замыкание)"
    },
    {
        "id": "t030",
        "text": " Есть элемент select, у него есть группы и в группах есть элементы. При выборе вывести на страницу из селекта label и value"
    },
    {
        "id": "t030",
        "text": " Факториал рекурсией и с помощью while"
    },
    {
        "id": "t031",
        "text": " Сортировка пузырьковая (сравниваем по парам, всплывает по возрастанию)"
    },
    {
        "id": "t032",
        "text": "Бинарный поиск рекурсией"
    }
]